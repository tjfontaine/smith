box: golang:1.13
no-response-timeout: 15

build:
  base-path: /go/src/github.com/oracle/smith
  steps:
    - script:
        name: go vet
        code: go vet

    # golint is a little to strict
    # - golint:
    #     exclude: vendor

    - script:
        name: go test
        code: go test

    - script:
        name: clear out the build binaries
        code: rm -rf $GOPATH/pkg

    - script:
        name: decide version
        code: |
          # the prefix for version tags. This could be "v", "release-", or ""
          # depending on the repository
          export VERPREFIX="v"
          # the full glob for the version. This may need to be shortened if
          # the repository has fewer parts to its version numbers.
          export VERGLOB=$VERPREFIX*.*.*

          export VERSION=$(git describe --tags --match "$VERGLOB" | tr -d " \n")
          export VERSION=${VERSION#$VERPREFIX}
          export REALV=${VERSION%%-*}
          if [ "$REALV" != "$VERSION" ]; then
              export COMMITS=${VERSION#*-}
              export COMMITS=${COMMITS%%-*}
              export VERSION=${REALV}.${COMMITS}.$(git rev-parse --short HEAD | tr -d " \n")
          fi

    - script:
        name: compile
        code: |
            export CGO_ENABLED=0
            export ID=$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \n')
            GOOS=linux GOARCH=amd64 go build \
            -ldflags="-X main.ver=${VERSION} -X main.sha=${WERCKER_GIT_COMMIT} -B 0x${ID}" \
              -o "$WERCKER_OUTPUT_DIR/artifacts/latest/linux_amd64/smith"

            cp -r $WERCKER_OUTPUT_DIR/artifacts/latest/* $WERCKER_REPORT_ARTIFACTS_DIR

    # generate SHA's for all binaries
    - script:
        name: generate SHAs
        code: |
            cd $WERCKER_OUTPUT_DIR
            for f in $(find . -type f -name smith); do
              cd $WERCKER_OUTPUT_DIR/$(dirname "$f")
              sha256sum smith > SHA256SUMS
            done
            cd $WERCKER_OUTPUT_DIR
